PUTITAS
#6589
fpronto, micka

fpronto — 26/04/2021
openssh-server
fpronto — 26/04/2021
sudo mkdir -p /home/<user>/.ansible/tmp
sudo chown -R <user>:<user> /home/<user>
sudo usermod -a -G sudo <user>
micka
 iniciou uma chamada que durou 21 minutos.
 — 01/05/2021
fpronto — 01/05/2021
https://docs.google.com/document/d/1gRhteR70N-bLDuPFYCumqktVdkUx4la8cPNjzILfMb8/edit?usp=sharing
Google Docs
Relatório PD
PUTITAS
 iniciou uma chamada que durou 3 horas.
 — 03/05/2021
fpronto — 03/05/2021
https://teams.microsoft.com/l/team/19%3a5a107107ed8f45ba85f4629a8ededdb0%40thread.tacv2/conversations?groupId=ba87bbd7-18e3-48d9-9bdd-5f4ecb2fc530&tenantId=055a3822-099b-4683-ad90-b17a3b3b1507
Microsoft Teams

fpronto — 03/05/2021








fpronto — 03/05/2021






fpronto — 03/05/2021
https://www.youtube.com/watch?v=kK_nf25Y7fQ
YouTube
Morais
Morais reage a não sei bem o quê

PUTITAS — 03/05/2021
https://www.youtube.com/watch?v=IVmjnaeDwgo&ab_channel=fabiout
YouTube
fabiout
ALEXANDRE SANTOS REAGE A LEGENDBOY "FUI PARA A CASA DE FÉRIAS DE BI...

https://www.youtube.com/watch?v=J5qHdE2LYCw&ab_channel=Afodercomtudo
YouTube
Afodercomtudo
BBC Vida Marota: O Rato-esquilo

fpronto — 03/05/2021
https://www.youtube.com/watch?v=5yZ7PwepIQw
YouTube
Afodercomtudo
Anúncios de bairro : Fita-cola preta

micka — 05/05/2021
estive aqui a organizar mais ou menos o relatório e estamos com 7 páginas
Tipo de arquivo em anexo: document
Relatorio_PD.docx
319.49 KB
fpronto — 07/05/2021
micka como fizeram para identificar aquela coluna do Aa Ab Ac?
PUTITAS
 iniciou uma chamada que durou 33 minutos.
 — 08/05/2021
fpronto — 08/05/2021
[1]«Keyword reference for the .gitlab-ci.yml file | GitLab». https://docs.gitlab.com/ee/ci/yaml/ (acedido Mai. 03, 2021).
[2]«Jenkins vs GitLab CI: Battle of CI/CD Tools», LambdaTest, Ago. 11, 2020. https://www.lambdatest.com/blog/jenkins-vs-gitlab-ci-battle-of-ci-cd-tools/ (acedido Mai. 03, 2021).
[3]B. Batista, «Fazendo integração contínua dos testes automatizados com Gitlab CI.», Medium, Mar. 18, 2019. https://medium.com/automa%C3%A7%C3%A3o-com-batista/fazendo-integra%C3%A7%C3%A3o-cont%C3%ADnua-dos-testes-automatizados-com-gitlab-ci-5aa20045d281 (acedido Mai. 03, 2021).
PUTITAS
 iniciou uma chamada que durou 2 horas.
 — 10/05/2021
PUTITAS — 10/05/2021
2
3
4
5
6
7
8
9
10
11
const mongoose = require("mongoose");

var uri = "mongodb://localhost:27017/details";

mongoose.connect(uri, { useUnifiedTopology: true, useNewUrlParser: true });

const connection = mongoose.connection;

connection.once("open", function() {
  console.log("MongoDB database connection established successfully");
});
fpronto
 iniciou uma chamada que durou 2 horas.
 — 15/05/2021
fpronto — 15/05/2021
https://www.nosqlbooster.com/
NoSQLBooster - The Smartest GUI Tool and IDE for MongoDB
NoSQLBooster for MongoDB (formerly MongoBooster) is a shell-centric cross-platform GUI tool for MongoDB v2.6-4.4,
which provides fluent query builder, SQL query, update-in-place, ES2017
syntax support, and true intellisense experience....
PUTITAS — 15/05/2021
sudo docker exec -it mongodb bash
sudo ufw allow 27017/tcp
sudo ufw status verbose
PUTITAS — 15/05/2021
app.get('/:name', (req, res) => {
    MongoClient.connect(url, function(err, db) {
        if (err) throw err;
        var dbo = db.db("users");
        dbo.collection("customers").findOne({
            name: req.params.name
        }, 
        function(err, result) {
            if (err) throw err;
            res.json(result);
            db.close();
        });
    });
});
app.post('/', (req, res) => {
    MongoClient.connect(url, function(err, db) {
        if (err) throw err;
        var dbo = db.db("users");
        dbo.collection("customers").insertOne({
            name: req.body.name,
            age: req.body.age
        }, 
        function(err, result) {
            if (err) throw err;
            res.json(result);
            db.close();
        });
    });
});
fpronto — 15/05/2021
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');
  return next();
});

app.use(express.json({ limit: '50mb' }));
fpronto — 15/05/2021
Objects.keys(errors).lenght
PUTITAS
 iniciou uma chamada que durou 2 horas.
 — 17/05/2021
micka — 17/05/2021
app.use(express.static(path.join(__dirname, "public")))
fpronto — 17/05/2021
cd frontend
npm run build
mv build ../backend/build
PUTITAS
 iniciou uma chamada que durou uma hora.
 — 22/05/2021
micka — 22/05/2021
https://docs.google.com/document/d/1NRZD1CKIP7J0nTnwVDT3B1htBQp1fCVxgpZRJG7aPt0/edit?usp=sharing
Google Docs - create and edit documents online, for free.
Create a new document and edit with others at the same time -- from your computer, phone or tablet. Get stuff done with or without an internet connection. Use Docs to edit Word files. Free from Google.
PUTITAS — Hoje às 17:36
Tipo de arquivo em anexo: unknown
hosts.inv
46 bytes
---
-
  hosts: students
  become: yes
  vars:
  - docker_image_name: "ajfp/tp-pd"
  - docker_container_name: "notepad"
  - docker_mongo_container_name: "mongodb"
  - docker_mongo_image_name: "mongo"
  tasks:
    -
      debug: msg=Hello

    - name: "Check if docker is installed"
      shell: command -v docker >/dev/null 2>&1
      register: is_docker_install
      ignore_errors: yes

    - name: "Check if docker-compose is installed"
      shell: command -v docker-compose >/dev/null 2>&1
      register: is_docker_compose_install
      ignore_errors: yes


    - name: "Install aptitude using apt"
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: "Install required system packages"
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: "Add Docker GPG apt Key"
      apt_key:
       url: https://download.docker.com/linux/ubuntu/gpg
       state: present
      when: is_docker_install.rc != 0

    - name: "Add Docker Repository"
      apt_repository:
       repo: deb https://download.docker.com/linux/ubuntu bionic stable
       state: present
      when: is_docker_install.rc != 0

    - name: "Update apt and install docker-ce"
      apt: update_cache=yes name=docker-ce state=latest
      when: is_docker_install.rc != 0

    - name: "Install Docker Module for Python"
      pip:
       name: docker
      when: is_docker_install.rc != 0


    - name: "Install docker-compose if necessary"
      shell:
      when: is_docker_compose_install.rc != 0

    - name: "Check if already has mongo image"
      docker_image:
         name: "{{docker_mongo_image_name}}"
         tag: "latest"
         state: present
         source: pull

    - name: "Create mongo container if necessary"
      docker_container:
         name: "{{docker_mongo_container_name}}"
         image: "{{docker_mongo_image_name}}"
         ports:
          - "0.0.0.0:27017:27017"
         state: started

    - name: "Stop and Remove all notepad containers"
      docker_container:
         name: "{{docker_container_name}}"
         state: absent

    - name: "Remove notepad Image"
      docker_image:
        state: absent
        name: "{{docker_image_name}}"
        tag: "latest"
        force: yes
      
    - name: "Pull docker image from DockerHub"
      docker_image:
         name: "{{docker_image_name}}"
         state: present
         source: pull
         
    - name: "Launch docker container"
      docker_container:
         name: "{{docker_container_name}}"
         image: "{{docker_image_name}}"
         ports:
          - "127.0.0.1:8081:8081"
         links:
          - "mongodb:db"
         state: started
      register: docker_info
... (1 linha)
Recolher
install_application.yml
3 KB
NAO TESTEM AINDA
﻿
---
-
  hosts: students
  become: yes
  vars:
  - docker_image_name: "ajfp/tp-pd"
  - docker_container_name: "notepad"
  - docker_mongo_container_name: "mongodb"
  - docker_mongo_image_name: "mongo"
  tasks:
    -
      debug: msg=Hello

    - name: "Check if docker is installed"
      shell: command -v docker >/dev/null 2>&1
      register: is_docker_install
      ignore_errors: yes

    - name: "Check if docker-compose is installed"
      shell: command -v docker-compose >/dev/null 2>&1
      register: is_docker_compose_install
      ignore_errors: yes


    - name: "Install aptitude using apt"
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: "Install required system packages"
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: "Add Docker GPG apt Key"
      apt_key:
       url: https://download.docker.com/linux/ubuntu/gpg
       state: present
      when: is_docker_install.rc != 0

    - name: "Add Docker Repository"
      apt_repository:
       repo: deb https://download.docker.com/linux/ubuntu bionic stable
       state: present
      when: is_docker_install.rc != 0

    - name: "Update apt and install docker-ce"
      apt: update_cache=yes name=docker-ce state=latest
      when: is_docker_install.rc != 0

    - name: "Install Docker Module for Python"
      pip:
       name: docker
      when: is_docker_install.rc != 0


    - name: "Install docker-compose if necessary"
      shell:
      when: is_docker_compose_install.rc != 0

    - name: "Check if already has mongo image"
      docker_image:
         name: "{{docker_mongo_image_name}}"
         tag: "latest"
         state: present
         source: pull

    - name: "Create mongo container if necessary"
      docker_container:
         name: "{{docker_mongo_container_name}}"
         image: "{{docker_mongo_image_name}}"
         ports:
          - "0.0.0.0:27017:27017"
         state: started

    - name: "Stop and Remove all notepad containers"
      docker_container:
         name: "{{docker_container_name}}"
         state: absent

    - name: "Remove notepad Image"
      docker_image:
        state: absent
        name: "{{docker_image_name}}"
        tag: "latest"
        force: yes
      
    - name: "Pull docker image from DockerHub"
      docker_image:
         name: "{{docker_image_name}}"
         state: present
         source: pull
         
    - name: "Launch docker container"
      docker_container:
         name: "{{docker_container_name}}"
         image: "{{docker_image_name}}"
         ports:
          - "127.0.0.1:8081:8081"
         links:
          - "mongodb:db"
         state: started
      register: docker_info
