---
-
  hosts: students
  become: yes
  vars:
  - docker_image_name: "ajfp/tp-pd"
  - docker_container_name: "notepad"
  - docker_mongo_container_name: "mongodb"
  - docker_mongo_image_name: "mongo"
  tasks:
    -
      debug: msg=Hello

    #- name: "Check if docker is installed"
    #  shell: command -v docker >/dev/null 2>&1
    #  register: is_docker_install
    #  ignore_errors: yes

    #- name: "Check if docker-compose is installed"
    #  shell: command -v docker-compose >/dev/null 2>&1
    #  register: is_docker_compose_install
    #  ignore_errors: yes


    #- name: "Install aptitude using apt"
    #  apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

   # - name: "Install required system packages"
   #   apt: name={{ item }} state=latest update_cache=yes
   #   loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

   # - name: "Add Docker GPG apt Key"
   #   apt_key:
   #    url: https://download.docker.com/linux/ubuntu/gpg
   #    state: present
   #   when: is_docker_install.rc != 0

   # - name: "Add Docker Repository"
   #   apt_repository:
    #   repo: deb https://download.docker.com/linux/ubuntu bionic stable
    #   state: present
    #  when: is_docker_install.rc != 0

   # - name: "Update apt and install docker-ce"
   #   apt: update_cache=yes name=docker-ce state=latest
   #   when: is_docker_install.rc != 0

   # - name: "Install Docker Module for Python"
   #   pip:
   #    name: docker
   #   when: is_docker_install.rc != 0


  #  - name: "Install docker-compose if necessary"
  #    shell:
  #    when: is_docker_compose_install.rc != 0

    - name: "Check if already has mongo image"
      docker_image:
         name: "{{docker_mongo_image_name}}"
         tag: "latest"
         state: present
         source: pull

    - name: "Create mongo container if necessary"
      docker_container:
         name: "{{docker_mongo_container_name}}"
         image: "{{docker_mongo_image_name}}"
         ports:
          - "0.0.0.0:27017:27017"
         state: started

    - name: "Stop and Remove all notepad containers"
      docker_container:
         name: "{{docker_container_name}}"
         state: absent

    - name: "Remove notepad Image"
      docker_image:
        state: absent
        name: "{{docker_image_name}}"
        tag: "latest"
        force: yes
      
    - name: "Pull docker image from DockerHub"
      docker_image:
         name: "{{docker_image_name}}"
         state: present
         source: pull
         
    - name: "Launch docker container"
      docker_container:
         name: "{{docker_container_name}}"
         image: "{{docker_image_name}}"
         ports:
          - "127.0.0.1:8081:8081"
         links:
          - "mongodb:db"
         state: started
      register: docker_info
